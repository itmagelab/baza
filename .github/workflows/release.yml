---
name: Release

on:
  push:
    tags:
      # - "v[0-9]+.[0-9]+.[0-9]+"
      - "test"

permissions:
  contents: write

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get the release version from the tag
        if: env.VERSION == ''
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Show the version
        run: |
          echo "version is: $VERSION"
      - name: Check that tag version and Cargo.toml version are the same
        shell: bash
        run: |
          if ! grep -q "version = \"${VERSION:1}\"" Cargo.toml; then
            echo "version does not match Cargo.toml" >&2
            exit 1
          fi
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create $VERSION --draft --verify-tag --title $VERSION
    outputs:
      version: ${{ env.VERSION }}

  build:
    name: build-release
    needs: ["create-release"]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            strip: x86_64-linux-musl-strip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install packages (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          contrib/ci/ubuntu-install-packages

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Build project
        run: cargo build --release

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/baza
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
